Аппаратный SPI API. RP2040 имеет 2 идентичных экземпляра контроллера последовательного периферийного интерфейса (SPI). PrimeCell SSP является ведущим 
    или ведомым интерфейсом для синхронной последовательной связи с периферийными устройствами, которые имеют Синхронные последовательные интерфейсы 
    Motorola SPI, National Semiconductor Microwire или Texas Instruments. Контроллер может быть определен как ведущий или ведомый с помощью функции 
    spi_set_slave. Каждый контроллер можно подключить к нескольким выводам GPIO. Дополнительную информацию см. в таблице выбора функций GPIO в 
    техническом описании.

void spi_deinit (spi_inst_t *spi)
    Инициализация экземпляров SPI. Переводит SPI в отключённое состояние. Для повторного включения функций устройства необходимо вызвать функцию Init
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1


static uint spi_get_index (spi_inst_t *spi)
    Преобразуйте номер экземпляра I2c в номер аппаратного экземпляра
Parameters
    экземпляр spi SPI
Returns
    Номер SPI, 0 или 1


void spi_init (spi_inst_t *spi, uint baudrate)
    Инициализирует экземпляры SPI. Переводит SPI в известное состояние и включает его. Необходимо вызывать перед другими функциями
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1. baudrate Требуемая скорость передачи данных в Гц


static size_t spi_is_readable (spi_inst_t *spi)
    Проверьте, можно ли выполнить считывание с устройства SPI
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
Returns
    Ненулевое значение, если возможно считывание, т.е. данные присутствуют


static size_t spi_is_writable (spi_inst_t *spi)
    Проверьте, можно ли выполнить запись на устройстве SPI
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
Returns
    0, если для записи нет свободного места. Не равно 0, если запись возможна


int spi_read16_blocking (spi_inst_t *spi, uint16_t repeated_tx_data, uint16_t *dst, size_t len)
    Считывание с устройства SPI. Считывание полуслов длины из SPI в dst. Блокируется до тех пор, пока не будут переданы все данные.
        Тайм-аут отсутствует, так как аппаратное обеспечение SPI всегда передает данные с известной скоростью.
        epeated_tx_data многократно выводится на TX по мере считывания данных с RX. Обычно это значение может быть равно 0, но для некоторых 
        устройств требуется определенное значение, например, для SD-карт требуется 0xff
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    repeated_tx_data Буфер данных для записи
    буфер dst для считывания данных
    len Длина dst в буфере в полусловах
Returns
    Количество записанных/считанных байт


int spi_read_blocking (spi_inst_t *spi, uint8_t repeated_tx_data, uint8_t *dst, size_t len)
    Считывание с устройства SPI. Считывание len байт из SPI в dst. Блокировка до передачи всех данных.
        Тайм-аут отсутствует, так как аппаратное обеспечение SPI всегда передает данные с известной скоростью.
        repeated_tx_data многократно выводится на TX по мере считывания данных с RX. Обычно это может быть 0,
        но для некоторых устройств требуется определенное значение, например, для SD-карт требуется 0xff
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    repeated_tx_data Буфер данных для записи
    буфер dst для считывания данных
    len Длина dst в буфере в полусловах
Returns
    Количество записанных/считанных байт


uint spi_set_baudrate (spi_inst_t *spi, uint baudrate)
    Установите скорость передачи данных SPI. Установите частоту SPI как можно ближе к скорости передачи данных и верните фактическую достигнутую скорость
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    Скорость передачи данных, необходимая в герцах, должна обеспечивать скорость передачи данных не менее 2 Мбит/с или выше, 
        в зависимости от настроек системных часов.
Returns
    Фактическая установленная скорость передачи данных в бодах


static void spi_set_format (spi_inst_t *spi, uint data_bits, spi_cpol_t cpol, spi_cpha_t cpha, spi_order_t order)
    Настройте SPI. Настройте способ, которым SPI сериализует и десериализует данные в сети
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    data_bits Количество битов данных за передачу. Допустимые значения 4..16.
    pol Полярность SSPCLKOUT, применимо только к формату кадра Motorola SPI.
    pha Фаза SSPCLKOUT, применимо только к формату кадра Motorola SPI
    order Должно быть SPI_MSB_FIRST, другие значения на PL022 не поддерживаются
Returns


static void spi_set_slave (spi_inst_t *spi, bool slave)
    Установите режим SPI «ведущий/ведомый». Настройте SPI для работы в режиме «ведущий» или «ведомый». По умолчанию spi_init() устанавливает режим «ведущий»
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    slave - значение true для установки устройства SPI в качестве подчиненного устройства, false - в качестве ведущего


int spi_write16_blocking (spi_inst_t *spi, const uint16_t *src, size_t len)
    Запись на устройство SPI. Запись полуслов длиной len из источника в SPI. Отбрасывайте любые полученные данные. Блокируйте до тех пор,
        пока все данные не будут переданы. Тайм-аут отсутствует, так как аппаратное обеспечение SPI всегда передаёт данные с известной скоростью.
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    src Буфер данных для записи
    максимальная длина буферов
Returns
    Количество записанных/считанных байт


int spi_write16_read16_blocking (spi_inst_t *spi, const uint16_t *src, uint16_t *dst, size_t len)
    Запись/считывание полуслов в/из устройства SPI. Запись полуслов длиной len из источника в SPI. Одновременное считывание полуслов длиной 
        len из SPI в место назначения. Блокировка до передачи всех данных. Тайм-аут отсутствует, так как аппаратное обеспечение SPI всегда
        передаёт данные с известной скоростью.
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    src Буфер данных для записи
    dst летнего времени для считывания данных
    максимальная длина ОБОИХ буферов в полусловах
Returns
    Количество записанных/считанных байт


int spi_write_blocking (spi_inst_t *spi, const uint8_t *src, size_t len)
    Запись на устройство SPI, блокировка. Запись байтов длиной len из источника в SPI и отбрасывание любых полученных данных.
        Блокировка до передачи всех данных. Тайм-аут отсутствует, так как аппаратное обеспечение SPI всегда передаёт данные с известной скоростью.
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    src Буфер данных для записи
    Длина src
Returns
    Количество записанных/считанных байт


int spi_write_read_blocking (spi_inst_t *spi, const uint8_t *src, uint8_t *dst,  size_t len)
    Запись/чтение в/из устройства SPI. Запись len байт из src в SPI. Одновременное чтение len байт из SPI в dst. 
        Блокировка до передачи всех данных. Без таймаута, так как аппаратное обеспечение SPI всегда передаёт данные с известной скоростью
Parameters
    spi Спецификатор экземпляра SPI, либо spi0, либо spi1
    src Буфер данных для записи
    dst летнего времени для считывания данных
    длина len ОБОИХ буферов
Returns
    Количество записанных/считанных байт