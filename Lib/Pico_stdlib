Объединение основного набора библиотек Pico SDK, используемых в большинстве исполняемых файлов, а также некоторых дополнительных вспомогательных методов. 
    Включение pico_stdlib дает вам все необходимое для запуска базовой программы, которая выводит данные в стандартный поток вывода или мигает светодиодом.
pico_stdlib.h включает в себя  
    hardware_uart
    hardware_gpio
    pico_binary_info
    pico_runtime
    pico_ platform
    pico_printf
    pico_stdio
    pico_standart_link
    pico_util


bool check_sys_clock_khz (uint32_t freq_khz, uint *vco_freq_out, uint *post_div1_out, uint *post_div2_out)
    Проверьте, является ли заданная системная тактовая частота допустимой/достижимой.
Parameters
    запрошенная частота freq_khz
    vco_freq_out В случае успеха - частота генератора регулятора напряжения, которая будет использоваться системой PLL
    post_div1_out В случае успеха - первый пост-делитель для системы PLL
    post_div2_out При успешном выполнении, второй разделитель записей для SYS PLL
Returns
    значение true, если частота возможна и выходные параметры были записаны


void setup_default_uart ()
    Настройте UART по умолчанию и назначьте его GPIO по умолчанию. По умолчанию будет использоваться UART0, при этом TX будет привязан к GPIO 0,
    RX - к GPIO 1, а скорость передачи данных - к 115200 Вызов этого метода также инициализирует stdin/stdout через UART, если подключена библиотека
    pico_stdio_uart. Значения по умолчанию можно изменить, используя configuration defines, PICO_DEFAULT_UART_INSTANCE, PICO_DEFAULT_UART_BAUD_RATE, 
    PICO_DEFAULT_UART_TX_PIN, PICO_DEFAULT_UART_RX_PIN


void set_sys_clock_pll (uint32_t vco_freq, uint post_div1, uint post_div2)
    Инициализируйте системные часы. Подробные сведения о работе с таблетками приведены в документации PLL в техническом описании.
Parameters
    vco_freq - частота генератора регулятора напряжения, которая будет использоваться SYSPLL
    post_div1 - первый пост-делитель для SYS PLL
    post_div2 - второй пост-делитель для SYS PLL


static bool set_sys_clock_khz (uint32_t freq_khz, bool required)
    Попробуйте задать системную тактовую частоту в кГц. Обратите внимание, что возможны не все тактовые частоты; предпочтительнее использовать 
        src/rp2_common/hardware_clocks/scripts/vcocalc.py для расчета параметров, которые будут использоваться с помощью set_sys_clock_pll
Parameters
    запрашиваемая частота freq_khz
    требуется, если значение равно true, то эта функция подтвердит, что частота недостижима
Returns
    значение true, если часы были настроены


void set_sys_clock_48mhz ()
    Установите системные тактовые частоты на 48 МГц. Установите системные тактовые частоты на 48 МГц и установите соответствующие тактовые 
        частоты периферийных устройств.